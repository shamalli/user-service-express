openapi: 3.0.0
info:
  title: User Service API
  version: 1.0.0
paths:
  /api/register:
    post:
      summary: Регистрация пользователя
      tags:
        - endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  example: ''
                birthDate:
                  type: string
                  format: date
                email:
                  type: string
                  example: ''
                password:
                  type: string
                  example: ''
              required:
                - fullName
                - birthDate
                - email
                - password
      responses:
        '201':
          description: Пользователь зарегистрирован
        '400':
          description: Bad request
        '409':
          description: Email уже зарегистрирован
  /api/login:
    post:
      summary: Авторизация пользователя
      tags:
        - endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: ''
                password:
                  type: string
                  example: ''
              required:
                - email
                - password
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Неверные учетные данные
  /api/users/{id}:
    get:
      summary: Получить пользователя по ID
      tags:
        - endpoints
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Информация о пользователе
        '403':
          description: Доступ запрещен
        '404':
          description: Пользователь не найден
      security:
        - bearerAuth: []
  /api/users:
    get:
      summary: Получить список всех пользователей (только для админа)
      tags:
        - endpoints
      responses:
        '200':
          description: Список пользователей
        '403':
          description: Доступ запрещен
      security:
        - bearerAuth: []
  /api/users/{id}/block:
    post:
      summary: Блокировка пользователя
      tags:
        - endpoints
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Пользователь заблокирован
        '403':
          description: Доступ запрещен
        '404':
          description: Пользователь не найден
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
